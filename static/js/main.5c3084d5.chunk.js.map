{"version":3,"sources":["components/NavBar.js","components/Generations.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","Generations","props","svgRef","useRef","useEffect","data","current","root","d3","margin","top","right","bottom","left","width","dy","diagonal","x","d","y","tree","nodeSize","x0","y0","descendants","forEach","i","id","_children","children","depth","name","length","svg","attr","style","gLink","append","gNode","update","source","duration","altKey","nodes","reverse","links","eachBefore","node","height","transition","tween","window","ResizeObserver","dispatch","selectAll","nodeEnter","enter","on","text","clone","lower","merge","exit","remove","link","target","linkEnter","o","chart","ref","App","useState","treeData","setTreeData","getData","axios","get","then","response","list","people","getMale","_","filter","gsx$gender","$t","gsx$father","getChildren","ele","person","gsx$name","gsx$id","push","cloneDeep","prepareData","feed","entry","console","log","catch","error","finally","Container","CssBaseline","Box","my","gutterBottom","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","Boolean","location","hostname","match","ReactDOM","render","ThemeProvider","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c3084d5.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nconst NavBar = () => {\r\n    return(\r\n        <div>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h5\" color=\"green\">\r\n                Binary Tree Kudapattu\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst Generations = (props) => {\r\n\r\n  const svgRef = useRef(null);\r\n\r\n  const chart = () => {\r\n    const root = d3.hierarchy(props.data);\r\n\r\n    let margin = {\r\n      top: 10,\r\n      right: 120,\r\n      bottom: 10,\r\n      left: 90\r\n    }\r\n\r\n    const width = 900;\r\n\r\n    const dx = 10, dy = width / 6;\r\n\r\n    const diagonal = d3.linkHorizontal().x(d => d.y).y(d => d.x);\r\n\r\n      const tree = d3.tree().nodeSize([dx, dy]);\r\n\r\n    root.x0 = dy / 2;\r\n    root.y0 = 0;\r\n    root.descendants().forEach((d, i) => {\r\n      d.id = i;\r\n      d._children = d.children;\r\n      if (d.depth && d.data.name.length !== 7) d.children = null;\r\n    });\r\n\r\n    const svg = d3.select(svgRef.current)\r\n      .attr(\"viewBox\", [-margin.left, -margin.top, width, dx])\r\n      .style(\"font\", \"10px sans-serif\")\r\n      .style(\"user-select\", \"none\");\r\n\r\n    const gLink = svg.append(\"g\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#555\")\r\n      .attr(\"stroke-opacity\", 0.4)\r\n      .attr(\"stroke-width\", 3.5);\r\n\r\n    const gNode = svg.append(\"g\")\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"pointer-events\", \"all\");\r\n\r\n    function update(source) {\r\n      const duration = d3.event && d3.event.altKey ? 2500 : 250;\r\n      const nodes = root.descendants().reverse();\r\n      const links = root.links();\r\n\r\n      // Compute the new tree layout.\r\n      tree(root);\r\n\r\n      let left = root;\r\n      let right = root;\r\n      root.eachBefore(node => {\r\n        if (node.x < left.x) left = node;\r\n        if (node.x > right.x) right = node;\r\n      });\r\n\r\n      const height = right.x - left.x + margin.top + margin.bottom;\r\n\r\n      const transition = svg.transition()\r\n        .duration(duration)\r\n        .attr(\"viewBox\", [-margin.left, left.x - margin.top, width, height])\r\n        .tween(\"resize\", window.ResizeObserver ? null : () => () => svg.dispatch(\"toggle\"));\r\n\r\n      // Update the nodesâ€¦\r\n      const node = gNode.selectAll(\"g\")\r\n        .data(nodes, d => d.id);\r\n\r\n      // Enter any new nodes at the parent's previous position.\r\n      const nodeEnter = node.enter().append(\"g\")\r\n        .attr(\"transform\", d => `translate(${source.y0},${source.x0})`)\r\n        .attr(\"fill-opacity\", 0)\r\n        .attr(\"stroke-opacity\", 0)\r\n        .on(\"click\", d => {\r\n          d.children = d.children ? null : d._children;\r\n          update(d);\r\n        });\r\n\r\n      nodeEnter.append(\"circle\")\r\n        .attr(\"r\", 3.5)\r\n        .attr(\"fill\", d => d._children ? \"#555\" : \"#999\")\r\n        .attr(\"stroke-width\", 10);\r\n\r\n      nodeEnter.append(\"text\")\r\n        .attr(\"dy\", \"0.31em\")\r\n        .attr(\"x\", d => d._children ? -9 : 9)\r\n        .attr(\"text-anchor\", d => d._children ? \"end\" : \"start\")\r\n        .text(d => d.data.name)\r\n        .clone(true).lower()\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"stroke-width\", 3)\r\n        .attr(\"stroke\", \"white\");\r\n\r\n      // Transition nodes to their new position.\r\n      const nodeUpdate = node.merge(nodeEnter).transition(transition)\r\n        .attr(\"transform\", d => `translate(${d.y},${d.x})`)\r\n        .attr(\"fill-opacity\", 1)\r\n        .attr(\"stroke-opacity\", 1);\r\n\r\n      // Transition exiting nodes to the parent's new position.\r\n      const nodeExit = node.exit().transition(transition).remove()\r\n        .attr(\"transform\", d => `translate(${source.y},${source.x})`)\r\n        .attr(\"fill-opacity\", 0)\r\n        .attr(\"stroke-opacity\", 0);\r\n\r\n      // Update the linksâ€¦\r\n      const link = gLink.selectAll(\"path\")\r\n        .data(links, d => d.target.id);\r\n\r\n\r\n      // Enter any new links at the parent's previous position.\r\n      const linkEnter = link.enter().append(\"path\")\r\n        .attr(\"d\", d => {\r\n          const o = { x: source.x0, y: source.y0 };\r\n          return diagonal({ source: o, target: o });\r\n        });\r\n\r\n      // Transition links to their new position.\r\n      link.merge(linkEnter).transition(transition)\r\n        .attr(\"d\", diagonal);\r\n\r\n      // Transition exiting nodes to the parent's new position.\r\n      link.exit().transition(transition).remove()\r\n        .attr(\"d\", d => {\r\n          const o = { x: source.x, y: source.y };\r\n          return diagonal({ source: o, target: o });\r\n        });\r\n\r\n      // Stash the old positions for transition.\r\n      root.eachBefore(d => {\r\n        d.x0 = d.x;\r\n        d.y0 = d.y;\r\n      });\r\n    }\r\n\r\n    update(root);\r\n\r\n    return svg.node();\r\n  }\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    if (props.data && svgRef.current) {\r\n      chart();\r\n    }\r\n    \r\n  }, [props.data, svgRef.current]);\r\n\r\n\r\n  return (\r\n          <svg ref={svgRef}></svg>\r\n  );\r\n\r\n}\r\n\r\nexport default Generations;","import React, { Component, useState, useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport NavBar from './components/NavBar';\nimport Generations from './components/Generations';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nconst App = () => {\n\n  const [treeData, setTreeData] = useState([]);\n\n  const prepareData = (list) => {\n    let people = {};\n    people.name = list[0][\"gsx$name\"][\"$t\"];\n    people.id = list[0][\"gsx$id\"][\"$t\"];\n\n    let getMale = _.filter(list, (o) => o.gsx$gender.$t === \"M\" && o.gsx$father.$t);\n\n    if (!people.children) {\n      let getChildren = _.filter(getMale, (o) => o.gsx$father.$t === people.id)\n      let children = [];\n\n      getChildren.forEach((ele) => {\n        let person = {};\n        person.name = ele.gsx$name.$t;\n        person.id = ele.gsx$id.$t;\n\n        children.push(person);\n      })\n\n      people.children = _.cloneDeep(children);\n\n    }\n\n\n\n      // Second\n      people.children.forEach((ele) => {\n        if (!ele.children) {\n          let getChildren = _.filter(getMale, (o) => o.gsx$father.$t === ele.id)\n          let children = [];\n\n          getChildren.forEach((ele) => {\n            let person = {};\n            person.name = ele.gsx$name.$t;\n            person.id = ele.gsx$id.$t;\n\n            children.push(person);\n          })\n\n          ele.children = _.cloneDeep(children);\n\n          //Third\n          ele.children.forEach((ele) => {\n            let getChildren = _.filter(getMale, (o) => o.gsx$father.$t === ele.id)\n            let children = [];\n\n            getChildren.forEach((ele) => {\n              let person = {};\n              person.name = ele.gsx$name.$t;\n              person.id = ele.gsx$id.$t;\n\n              children.push(person);\n            })\n\n            ele.children = _.cloneDeep(children);\n\n            //Fourth\n            ele.children.forEach((ele) => {\n              let getChildren = _.filter(getMale, (o) => o.gsx$father.$t === ele.id)\n              let children = [];\n\n              getChildren.forEach((ele) => {\n                let person = {};\n                person.name = ele.gsx$name.$t;\n                person.id = ele.gsx$id.$t;\n\n                children.push(person);\n              })\n\n              ele.children = _.cloneDeep(children);\n            })\n\n          })\n        }\n      })\n\n\n    return people;\n\n  }\n\n  const getData = () => {\n\n    // Make a request for a user with a given ID\n    axios.get('https://spreadsheets.google.com/feeds/list/1wpyciQu2aXL8IzqQBXtwMyP4oGBuJc82K9B--jqVwHk/1/public/values?alt=json')\n      .then(function (response) {\n        // handle success\n        \n        let data = prepareData(response.data.feed.entry);\n\n        console.log(data);\n        setTreeData(data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n\n  }\n\n  useEffect(() => {\n    if (!treeData.length) {\n      getData();\n    }\n  }, [])\n\n  return (\n    <Container>\n      <CssBaseline />\n      <NavBar />\n      <Box my={4}>\n        <Typography variant=\"h6\" gutterBottom>\n          Generations of People from Kudapattu\n        </Typography>\n        <Generations data={treeData}></Generations>\n      </Box>\n    </Container>\n  )\n}\nexport default App\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>,\n    document.querySelector('#root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}