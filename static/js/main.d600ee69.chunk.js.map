{"version":3,"sources":["components/NavBar.js","helpers/treeData.js","constants/constants.js","components/Generations.js","components/verticalTree.js","components/Tabs.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","Box","mx","right","prepareData","list","people","name","id","gender","children","makeChildren","person","getChildren","_","filter","o","gsx$father","$t","length","forEach","ele","gsx$name","gsx$id","gsx$gender","push","cloneDeep","getData","url","setData","axios","get","then","response","data","feed","entry","console","log","catch","error","finally","variable","dataUrl","gen1","gen2","btk","Generations","props","svgRef","useRef","useEffect","current","root","d3","margin","top","bottom","left","width","dy","diagonal","x","d","y","tree","nodeSize","x0","y0","descendants","i","_children","depth","svg","attr","style","gLink","append","gNode","update","source","duration","altKey","nodes","reverse","links","eachBefore","node","height","transition","tween","window","ResizeObserver","dispatch","selectAll","nodeEnter","enter","on","text","clone","lower","merge","exit","remove","link","target","linkEnter","chart","ref","VerticalTree","g","size","treeData","slice","click","nodeUpdate","select","nodeExit","insert","parent","s","inData","newsource","buildHeap","TabPanel","value","index","other","component","role","hidden","aria-labelledby","p","a11yProps","useStyles","makeStyles","theme","backgroundColor","palette","background","paper","FullWidthTabs","classes","useTheme","React","useState","setValue","generationData","setTreeData","getVertData","setVertData","constants","className","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","axis","direction","onChangeIndex","dir","App","CssBaseline","Grid","container","item","xs","createMuiTheme","primary","main","secondary","red","A400","default","Boolean","location","hostname","match","ReactDOM","render","ThemeProvider","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d600ee69.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Box, Toolbar, Typography } from '@material-ui/core'\r\nconst NavBar = () => {\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h3\" color=\"green\">\r\n                        Binary Tree Kudapattu\r\n                </Typography>\r\n                    <Box mx={2} right>\r\n                        <Typography variant=\"h5\">\r\n                            Generations of People from Kudapattu\r\n                        </Typography>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nconst makeChildren = (list, person) => {\r\n    let getChildren = _.filter(list, (o) => o.gsx$father.$t === person.id);\r\n    \r\n    let children = [];\r\n\r\n    // Terminate the recursive if there's no father id\r\n    if (!getChildren.length) return;\r\n\r\n    getChildren.forEach((ele) => {\r\n      let person = {};\r\n      person.name = ele.gsx$name.$t;\r\n      person.id = ele.gsx$id.$t;\r\n      person.gender = ele.gsx$gender.$t;\r\n\r\n      children.push(person);\r\n    })\r\n\r\n    person.children = _.cloneDeep(children);\r\n\r\n    person.children.forEach((ele) => {\r\n      makeChildren(list, ele)\r\n    })\r\n  }\r\n\r\n  const prepareData = (list) => {\r\n    // First Parent data preparation\r\n    let people = {};\r\n    people.name = list[0][\"gsx$name\"][\"$t\"];\r\n    people.id = list[0][\"gsx$id\"][\"$t\"];\r\n    people.gender = list[0][\"gsx$gender\"][\"$t\"];\r\n\r\n    if (!people.children) {\r\n      makeChildren(list, people)\r\n    }\r\n   \r\n    return people;\r\n\r\n  }\r\n\r\n  const getData = (url, setData) => {\r\n\r\n    // Make a request for a user with a given ID\r\n    axios.get(url)\r\n      .then(function (response) {\r\n        // handle success\r\n        \r\n        let data = prepareData(response.data.feed.entry);\r\n\r\n        console.log(data);\r\n        setData(data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .finally(function () {\r\n        // always executed\r\n      });\r\n\r\n  }\r\n\r\n  export default getData;","const variable = {\r\n    dataUrl: {\r\n        gen1: 'https://spreadsheets.google.com/feeds/list/1wpyciQu2aXL8IzqQBXtwMyP4oGBuJc82K9B--jqVwHk/1/public/values?alt=json',\r\n        gen2: ''\r\n    },\r\n    btk: ''\r\n}\r\n\r\nexport default variable;","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst Generations = (props) => {\r\n\r\n  const svgRef = useRef(null);\r\n\r\n  const chart = () => {\r\n    const root = d3.hierarchy(props.data);\r\n\r\n    let margin = {\r\n      top: 10,\r\n      right: 120,\r\n      bottom: 10,\r\n      left: 90\r\n    }\r\n\r\n    const width = 900;\r\n\r\n    const dx = 25, dy = width / 6;\r\n\r\n    const diagonal = d3.linkHorizontal().x(d => d.y).y(d => d.x);\r\n\r\n      const tree = d3.tree().nodeSize([dx, dy]);\r\n\r\n    root.x0 = dy / 2;\r\n    root.y0 = 0;\r\n    root.descendants().forEach((d, i) => {\r\n      d.id = i;\r\n      d._children = d.children;\r\n      if (d.depth && d.data.name.length !== 7) d.children = null;\r\n    });\r\n\r\n    const svg = d3.select(svgRef.current)\r\n      .attr(\"viewBox\", [-margin.left, -margin.top, width, dx])\r\n      .style(\"font\", \"10px sans-serif\")\r\n      .style(\"user-select\", \"none\");\r\n\r\n    const gLink = svg.append(\"g\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"#23d6e8de\")\r\n      .attr(\"stroke-opacity\", 0.4)\r\n      .attr(\"stroke-width\", 3.5);\r\n\r\n    const gNode = svg.append(\"g\")\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"pointer-events\", \"all\");\r\n\r\n    function update(source) {\r\n      const duration = d3.event && d3.event.altKey ? 2500 : 250;\r\n      const nodes = root.descendants().reverse();\r\n      const links = root.links();\r\n\r\n      // Compute the new tree layout.\r\n      tree(root);\r\n\r\n      let left = root;\r\n      let right = root;\r\n      root.eachBefore(node => {\r\n        if (node.x < left.x) left = node;\r\n        if (node.x > right.x) right = node;\r\n      });\r\n\r\n      const height = right.x - left.x + margin.top + margin.bottom;\r\n\r\n      const transition = svg.transition()\r\n        .duration(duration)\r\n        .attr(\"viewBox\", [-margin.left, left.x - margin.top, width, height])\r\n        .tween(\"resize\", window.ResizeObserver ? null : () => () => svg.dispatch(\"toggle\"));\r\n\r\n      // Update the nodes…\r\n      const node = gNode.selectAll(\"g\")\r\n        .data(nodes, d => d.id);\r\n\r\n      // Enter any new nodes at the parent's previous position.\r\n      const nodeEnter = node.enter().append(\"g\")\r\n        .attr(\"transform\", d => `translate(${source.y0},${source.x0})`)\r\n        .attr(\"fill-opacity\", 0)\r\n        .attr(\"stroke-opacity\", 0)\r\n        .on(\"click\", d => {\r\n          d.children = d.children ? null : d._children;\r\n          update(d);\r\n        });\r\n\r\n      nodeEnter.append(\"circle\")\r\n        .attr(\"r\", 3.5)\r\n        .attr(\"fill\", d => d._children ? \"#555\" : \"#999\")\r\n        .attr(\"stroke-width\", 10);\r\n\r\n      nodeEnter.append(\"text\")\r\n        .attr(\"dy\", \"0.31em\")\r\n        .attr(\"x\", d => d._children ? -9 : 9)\r\n        .attr(\"text-anchor\", d => d._children ? \"end\" : \"start\")\r\n        .text(d => d.data.name)\r\n        .attr(\"fill\", d => d.data.gender === 'M' ? \"#0acc84de\" : \"#e50ee8de\")\r\n        .attr(\"stroke-width\", 6)\r\n        .clone(true).lower()\r\n        .attr(\"stroke-linejoin\", \"round\")\r\n        .attr(\"stroke\", \"white\");\r\n        \r\n\r\n      // Transition nodes to their new position.\r\n      const nodeUpdate = node.merge(nodeEnter).transition(transition)\r\n        .attr(\"transform\", d => `translate(${d.y},${d.x})`)\r\n        .attr(\"fill-opacity\", 1)\r\n        .attr(\"stroke-opacity\", 1);\r\n\r\n      // Transition exiting nodes to the parent's new position.\r\n      const nodeExit = node.exit().transition(transition).remove()\r\n        .attr(\"transform\", d => `translate(${source.y},${source.x})`)\r\n        .attr(\"fill-opacity\", 0)\r\n        .attr(\"stroke-opacity\", 0);\r\n\r\n      // Update the links…\r\n      const link = gLink.selectAll(\"path\")\r\n        .data(links, d => d.target.id);\r\n\r\n\r\n      // Enter any new links at the parent's previous position.\r\n      const linkEnter = link.enter().append(\"path\")\r\n        .attr(\"d\", d => {\r\n          const o = { x: source.x0, y: source.y0 };\r\n          return diagonal({ source: o, target: o });\r\n        });\r\n\r\n      // Transition links to their new position.\r\n      link.merge(linkEnter).transition(transition)\r\n        .attr(\"d\", diagonal);\r\n\r\n      // Transition exiting nodes to the parent's new position.\r\n      link.exit().transition(transition).remove()\r\n        .attr(\"d\", d => {\r\n          const o = { x: source.x, y: source.y };\r\n          return diagonal({ source: o, target: o });\r\n        });\r\n\r\n      // Stash the old positions for transition.\r\n      root.eachBefore(d => {\r\n        d.x0 = d.x;\r\n        d.y0 = d.y;\r\n      });\r\n    }\r\n\r\n    update(root);\r\n\r\n    return svg.node();\r\n  }\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    if (props.data && svgRef.current) {\r\n      chart();\r\n    }\r\n    \r\n  }, [props.data, svgRef.current]);\r\n\r\n\r\n  return (\r\n          <svg ref={svgRef}></svg>\r\n  );\r\n\r\n}\r\n\r\nexport default Generations;","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nconst VerticalTree = (props) => {\r\n    \r\n    const svgRef = useRef(null);\r\n\r\n\r\n    let chart = () => {\r\n\r\n    const margin = { top: 20, right: 90, bottom: 30, left: 90 },\r\n        width = 960 - margin.left - margin.right,\r\n        height = 500 - margin.top - margin.bottom;\r\n\r\n    let i = 0,\r\n        duration = 750,\r\n        root;\r\n\r\n    let counter = 0;\r\n    let treeData = {};\r\n\r\n    const svg = d3.select(svgRef.current)\r\n        .attr(\"width\", width + margin.right + margin.left)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n\r\n    const g = svg.append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    const tree = d3.tree()\r\n        .size([width, height]);\r\n\r\n\r\n    function buildHeap(inData) {\r\n\r\n       // const newsource = { name: inData[0], children: getChildren(0, inData) }\r\n        const newsource = inData;\r\n        //   console.log('dl', newsource)\r\n\r\n        root = d3.hierarchy(newsource, function (d) { return d.children; });\r\n\r\n        root.x0 = 0;\r\n        root.y0 = width / 2;\r\n\r\n        update(root)\r\n    }\r\n\r\n\r\n    // just leaving this global so i can mess with it in the console\r\n    let nodes;\r\n\r\n    function update(source) {\r\n        //  root = d3.hierarchy(newsource, function(d) { return d.children; });\r\n\r\n        let treeData = tree(root)\r\n        nodes = treeData.descendants();\r\n        var links = treeData.descendants().slice(1);\r\n\r\n        // ****************** Nodes section ***************************\r\n        // Update the nodes...\r\n        var node = g.selectAll('g.node')\r\n            .data(nodes, function (d) { return d.id || (d.id = ++i); });\r\n\r\n        // Enter any new modes at the parent's previous position.\r\n        var nodeEnter = node.enter().append('g')\r\n            .attr('class', 'node')\r\n            .attr('cursor', 'pointer')\r\n            .attr(\"transform\", function (d) {\r\n                return \"translate(\" + source.x0 + \",\" + source.y0 + \")\";\r\n            })\r\n            .on('click', click);\r\n\r\n        // Add Circle for the nodes\r\n        nodeEnter.append('circle')\r\n            .attr('class', 'node')\r\n            .attr('fill', '#fff')\r\n            .attr('stroke', 'steelblue')\r\n            .attr('stroke-width', '.5em')\r\n            .attr('r', 1e-6)\r\n            .style(\"fill\", function (d) {\r\n                return d.children ? \"lightsteelblue\" : \"#fff\";\r\n            });\r\n\r\n        // Add labels for the nodes\r\n        nodeEnter.append('text')\r\n            .attr(\"dy\", \".35em\")\r\n            .attr(\"x\", function (d) {\r\n                return d.children || d._children ? -13 : 13;\r\n            })\r\n            .attr(\"text-anchor\", function (d) {\r\n                return d.children || d._children ? \"end\" : \"start\";\r\n            })\r\n            .text(function (d) { return d.data.name; });\r\n\r\n        // UPDATE\r\n        var nodeUpdate = nodeEnter.merge(node);\r\n\r\n        // Transition to the proper position for the node\r\n        nodeUpdate.transition()\r\n            .duration(duration)\r\n            .attr(\"transform\", function (d) {\r\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n            });\r\n\r\n        // Update the node attributes and style\r\n        nodeUpdate.select('circle.node')\r\n            .attr('r', 10)\r\n            .style(\"fill\", function (d) {\r\n                return d._children ? \"lightsteelblue\" : \"#fff\";\r\n            })\r\n            .attr('cursor', 'pointer');\r\n\r\n\r\n        // Remove any exiting nodes\r\n        var nodeExit = node.exit().transition()\r\n            .duration(duration)\r\n            .attr(\"transform\", function (d) {\r\n                return \"translate(\" + source.x + \",\" + source.y + \")\";\r\n            })\r\n            .remove();\r\n\r\n        // On exit reduce the node circles size to 0\r\n        nodeExit.select('circle')\r\n            .attr('r', 1e-6);\r\n\r\n        // On exit reduce the opacity of text labels\r\n        nodeExit.select('text')\r\n            .style('fill-opacity', 1e-6);\r\n\r\n        // ****************** links section ***************************\r\n\r\n        // Update the links...\r\n        var link = g.selectAll('path.link')\r\n            .data(links, function (d) { return d.id; });\r\n\r\n        /*\r\n        function connect(d, i) {\r\n          return     \"M\" + d.source.x + \",\" + (height - d.source.y)\r\n                   + \"V\" + (height - (3*d.source.y + 4*d.target.y)/7)\r\n                   + \"H\" + d.target.x\r\n                   + \"V\" + (height - d.target.y);\r\n      };*/\r\n\r\n        // Enter any new links at the parent's previous position.\r\n        var linkEnter = link.enter().insert('path', \"g\")\r\n            .attr(\"class\", \"link\")\r\n            .attr('fill', 'none')\r\n            .attr('stroke', '#555')\r\n            .attr('stroke-width', '.5em')\r\n            .attr('stroke-opacity', 0.4)\r\n            .attr('d', function (d) {\r\n                var o = { y: source.y0, x: source.x0 }\r\n                return diagonal(o, o)\r\n\r\n            });\r\n\r\n        // UPDATE\r\n        var linkUpdate = linkEnter.merge(link);\r\n\r\n        // Transition back to the parent element position\r\n        linkUpdate.transition()\r\n            .duration(duration)\r\n            .attr('d', function (d) { return diagonal(d, d.parent) });\r\n\r\n        // Remove any exiting links\r\n        var linkExit = link.exit().transition()\r\n            .duration(duration)\r\n            .attr('d', function (d) {\r\n                var o = { x: source.x, y: source.y }\r\n                return diagonal(o, o)\r\n            })\r\n            .remove();\r\n\r\n        // Store the old positions for transition.\r\n        nodes.forEach(function (d, i) {\r\n            //   console.log(d)\r\n            d.x0 = d.x;\r\n            d.y0 = d.y;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    // Takes an index and an array and finds all the children.\r\n    // returns an array which can be added to children of the root node to\r\n    // make a json thing which can be used to make a d3.hierarchy();\r\n   /* function getChildren(i, arr) {\r\n        var childs = [];\r\n\r\n        if (arr[i + 1 + i]) {\r\n            childs[0] = { name: arr[i * 2 + 1], children: [] }\r\n            if (arr[i + i + 2]) {\r\n                //  console.log(arr[i+1+ i], arr[i+i+2])\r\n                childs[1] = { name: arr[i * 2 + 2], children: [] };\r\n            }\r\n        }\r\n\r\n        var nextin = i * 2 + 1;\r\n        if (arr[nextin * 2 + 1]) {\r\n            //  console.log('more children')\r\n            childs[0].children = getChildren(nextin, arr)\r\n            childs[0]._children = null;\r\n\r\n            if (arr[nextin * 2 + 2]) {\r\n                childs[1].children = getChildren(nextin + 1, arr);\r\n                childs[1]._children = null;\r\n            }\r\n        }\r\n        return childs;\r\n     }*/\r\n\r\n\r\n    // not called but kind of what I might use to annimate the swap thing while\r\n    // balancing binary heaps\r\n    function expandChildren(index, chi) {\r\n        setTimeout(function () {\r\n            //buildHeap([ 4, 3, 2, 9, 14, 29] );\r\n\r\n            if (nodes[index].children === null) {\r\n                nodes[0].children = [nodes[0]._children[chi]]\r\n            }\r\n            else {\r\n                console.log(typeof nodes[0].children)\r\n                nodes[index].children.push(nodes[index]._children[1])\r\n            }\r\n            // .h(nodes[0]._children[0]);\r\n            //nodes[0]._children ;\r\n\r\n            // console.log(nodes[index])\r\n            update(nodes[index])\r\n            if (chi < 1) {\r\n                expandChildren(0, 1)\r\n            }\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    //expandChildren(0, 0);\r\n\r\n\r\n    // Creates a curved (diagonal) path from parent to the child nodes\r\n    // switched around all the x's and y's from orig so it's verticle\r\n    function diagonal(s, d) {\r\n        //console.log('in diag and s = ', s);\r\n        //console.log('d = ', d)\r\n\r\n       let path = `M ${s.x} ${s.y}\r\n          C ${(s.x + d.x) / 2} ${s.y},\r\n            ${(s.x + d.x) / 2} ${d.y},\r\n            ${d.x} ${d.y}`\r\n\r\n        return path;\r\n\r\n    }\r\n\r\n\r\n    // Toggle children on click.\r\n    function click(d) {\r\n        // use the following to superficially change the text of the node.\r\n        //  this.getElementsByTagName('text')[0].textContent = \"clicked all over\"\r\n\r\n        if (d.children) {\r\n            d._children = d.children;\r\n            d.children = null;\r\n        } else {\r\n            d.children = d._children;\r\n            d._children = null;\r\n        }\r\n\r\n        update(d);\r\n    }\r\n\r\n    // will make all the children null and store the real vals in _children\r\n    function collapse(d) {\r\n        if (d.children) {\r\n            d._children = d.children\r\n            d.children = null;\r\n            d._children.forEach(collapse)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    buildHeap(props.data)\r\n\r\n}\r\n\r\n    // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    if (props.data && svgRef.current) {\r\n      chart();\r\n    }\r\n    \r\n  }, [props.data, svgRef.current]);\r\n\r\n\r\n  return (\r\n          <svg ref={svgRef}></svg>\r\n  );\r\n}\r\n\r\nexport default VerticalTree;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport treeData from './../helpers/treeData';\r\nimport constants from './../constants/constants';\r\nimport Generations from './Generations';\r\nimport VerticalTree from './verticalTree';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n}));\r\n\r\nexport default function FullWidthTabs() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const [generationData, setTreeData] = useState([]);\r\n\r\n    const [getVertData, setVertData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!generationData.length) {\r\n            treeData(constants.dataUrl.gen1, setTreeData);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!getVertData.length) {\r\n            treeData(constants.dataUrl.gen1, setVertData);\r\n        }\r\n    }, [])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n                aria-label=\"full width tabs example\"\r\n            >\r\n                <Tab label=\"Horizontal\" {...a11yProps(0)} />\r\n                <Tab label=\"Veritical\" {...a11yProps(1)} />\r\n                <Tab label=\"Others\" {...a11yProps(2)} />\r\n            </Tabs>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    \r\n                    <Generations data={generationData} />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                <VerticalTree data={generationData} />\r\n        </TabPanel>\r\n                <TabPanel value={value} index={2} dir={theme.direction}>\r\n                    Item Three\r\n        </TabPanel>\r\n            </SwipeableViews>\r\n        </div>\r\n    );\r\n}","import React, { Component, useState, useEffect } from 'react';\nimport { Box, CssBaseline, Typography, Grid } from '@material-ui/core';\nimport NavBar from './components/NavBar';\nimport FullWidthTabs from './components/Tabs';\n\nconst App = () => {\n\n  return (\n    <div>\n      <CssBaseline />\n      <NavBar />\n      <Grid container>\n        <Grid item xs={12}>\n          <FullWidthTabs />\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\nexport default App\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>,\n    document.querySelector('#root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}